#=================================================
# https://github.com/wukongdaily/RunFilesBuilder
# Description: Build RunFiles using GitHub Actions
# Lisence: MIT
# Author: wukongdaily
# Blog: wkdaily.cpolar.top
#=================================================

name: Make AdGuardHome run files

on:
  workflow_dispatch:
      inputs:
        package_version:
          description: '这里是包版本'
          required: false
          default: 'packages-24.10'  

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
    
      - name: set PACKAGE_VERSION
        run: |
          package_version="${{ github.event.inputs.package_version }}"
          if [ -z "$package_version" ]; then
            package_version="packages-24.10"
          fi
          echo "PACKAGE_VERSION=$package_version" >> $GITHUB_ENV
      
      - name: Fetch latest release tag from AdGuardHome
        id: fetch_latest_tag
        run: |
          latest_tag=$(curl -s https://api.github.com/repos/AdguardTeam/AdGuardHome/releases/latest | jq -r '.tag_name')
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
          # https://github.com/AdguardTeam/AdGuardHome/releases/download/v0.107.55/AdGuardHome_linux_arm64.tar.gz

      - name: Clone makeself repository
        run: git clone https://github.com/megastep/makeself.git

      - name: Download latest AdGuardHome files
        run: |
          curl -LO "https://github.com/AdguardTeam/AdGuardHome/releases/download/${{ env.LATEST_TAG }}/AdGuardHome_linux_armv7.tar.gz"
          tar --one-top-level=AdGuardHome_aarch32 -xvzf AdGuardHome_linux_armv7.tar.gz
          echo "AdGuardHome_aarch32 List"
          ls AdGuardHome_aarch32
          
          curl -LO "https://github.com/AdguardTeam/AdGuardHome/releases/download/${{ env.LATEST_TAG }}/AdGuardHome_linux_arm64.tar.gz"
          tar --one-top-level=AdGuardHome_aarch64 -xvzf AdGuardHome_linux_arm64.tar.gz
          echo "AdGuardHome_aarch64 List"
          ls AdGuardHome_aarch64
          
          curl -LO "https://github.com/AdguardTeam/AdGuardHome/releases/download/${{ env.LATEST_TAG }}/AdGuardHome_linux_amd64.tar.gz"
          tar --one-top-level=AdGuardHome_x86_64 -xvzf AdGuardHome_linux_amd64.tar.gz
          echo "AdGuardHome_x86_64 List"
          ls AdGuardHome_x86_64

      - name: Download luci-app-adguardhome IPK files
        run: | 
          ARCHITECTURES=(
          "AdGuardHome_aarch32=https://dl.openwrt.ai/$PACKAGE_VERSION/arm_cortex-a7/kiddin9/"
          "AdGuardHome_aarch64=https://dl.openwrt.ai/$PACKAGE_VERSION/aarch64_cortex-a53/kiddin9/"
          "AdGuardHome_x86_64=https://dl.openwrt.ai/$PACKAGE_VERSION/x86_64/kiddin9/")

          # Process each architecture
          for ARCH_MAPPING in "${ARCHITECTURES[@]}"; do
              ARCH=$(echo "$ARCH_MAPPING" | cut -d= -f1)
              TARGET_URL=$(echo "$ARCH_MAPPING" | cut -d= -f2)

          # Ensure directories exist
          mkdir -p "$ARCH/depends"

          # Download luci-app-adguardhome ipk to the architecture folder
            curl -s "$TARGET_URL" | grep -oP "luci-app-adguardhome.*?\.ipk" | while read -r file; do
              new_file_name=$(echo "$file" | sed 's/~/_/g')
              curl -o "$ARCH/$new_file_name" "$TARGET_URL$file"
              ls "$ARCH/$new_file_name"
            done

          # Download adguardhome core ipk (but not luci-app-adguardhome) to the depends folder
            curl -s "$TARGET_URL" | grep -oP "(?<!luci-app-)adguardhome.*?\.ipk" | while read -r file; do
              new_file_name=$(echo "$file" | sed 's/~/_/g')
              curl -o "$ARCH/depends/$new_file_name" "$TARGET_URL$file"
              ls "$ARCH/depends/$new_file_name"
            done
          done
        
      - name: Create install.sh scripts
        run: |
          cat <<EOF > AdGuardHome_x86_64/install.sh
          #!/bin/sh
          opkg update
          if [ $? -ne 0 ]; then
              echo "update failed。"
              exit 1
          fi
          # install AdGuardHome Core IPK
          opkg install depends/*.ipk
          # install luci-app-adguardhome IPK
          opkg install *.ipk
          # update latest AdGuardHome Core
          cp AdGuardHome/AdGuardHome /usr/bin/AdGuardHome
          chmod +x /usr/bin/AdGuardHome
          EOF
          chmod +x AdGuardHome_x86_64/install.sh
          cp AdGuardHome_x86_64/install.sh AdGuardHome_aarch64/install.sh
          cp AdGuardHome_x86_64/install.sh AdGuardHome_aarch32/install.sh
          
      - name: Move AdGuardHome directories to makeself
        run: |
          mv AdGuardHome_x86_64 makeself/
          mv AdGuardHome_aarch64 makeself/
          mv AdGuardHome_aarch32 makeself/

      - name: Create self-extracting packages
        run: |
          cd makeself
          ./makeself.sh AdGuardHome_x86_64/ AdGuardHome_${{ env.LATEST_TAG }}_x86_64.run "by wukongdaily github action" ./install.sh
          ./makeself.sh AdGuardHome_aarch64/ AdGuardHome_${{ env.LATEST_TAG }}_aarch64.run "by wukongdaily github action" ./install.sh
          ./makeself.sh AdGuardHome_aarch32/ AdGuardHome_${{ env.LATEST_TAG }}_aarch32.run "by wukongdaily github action" ./install.sh
          
      - name: Check file sizes
        run: |
          ls -lh makeself/AdGuardHome_*.run

      - name: Fetch latest release details
        id: fetch_release_details
        run: |
          extra_content="![Github](https://img.shields.io/badge/AdGuardHome.run-123456?logo=github&logoColor=fff&labelColor=8470FF&style=for-the-badge) [![Github](https://img.shields.io/badge/国内加速站下载-FC7C0D?logo=github&logoColor=fff&labelColor=000&style=for-the-badge)](https://wkdaily.cpolar.top/archives/1) ![GitHub Downloads (all assets, specific tag)](https://img.shields.io/github/downloads/wukongdaily/RunFilesBuilder/AdGuardHome_${{ env.LATEST_TAG }}/total?style=for-the-badge&labelColor=black&color=%2325c2a0)"
          sed -i "1i$extra_content" "${{ github.workspace }}/info1.md"

      - name: Print release notes
        run: |
          cat ${{ github.workspace }}/info1.md

      - name: Upload run files as release assets
        uses: softprops/action-gh-release@v2.1.0
        with:
          tag_name: AdGuardHome_${{ env.LATEST_TAG }}
          name: "AdGuardHome-${{ env.LATEST_TAG }}"
          files: makeself/AdGuardHome*.run
          body_path: ${{ github.workspace }}/info1.md
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
